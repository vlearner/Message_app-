'use strict';

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _CoreManager = require('./CoreManager');

var _CoreManager2 = _interopRequireDefault(_CoreManager);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var StorageController = {
  async: 1,

  getAsyncStorage: function () {
    return _CoreManager2.default.getAsyncStorage();
  },
  getItemAsync: function (path) {
    var _this = this;

    return new _promise2.default(function (resolve, reject) {
      _this.getAsyncStorage().getItem(path, function (err, value) {
        if (err) {
          reject(err);
        } else {
          resolve(value);
        }
      });
    });
  },
  setItemAsync: function (path, value) {
    var _this2 = this;

    return new _promise2.default(function (resolve, reject) {
      _this2.getAsyncStorage().setItem(path, value, function (err, value) {
        if (err) {
          reject(err);
        } else {
          resolve(value);
        }
      });
    });
  },
  removeItemAsync: function (path) {
    var _this3 = this;

    return new _promise2.default(function (resolve, reject) {
      _this3.getAsyncStorage().removeItem(path, function (err) {
        if (err) {
          reject(err);
        } else {
          resolve();
        }
      });
    });
  },
  clear: function () {
    this.getAsyncStorage().clear();
  }
}; /**
    * Copyright (c) 2015-present, Parse, LLC.
    * All rights reserved.
    *
    * This source code is licensed under the BSD-style license found in the
    * LICENSE file in the root directory of this source tree. An additional grant
    * of patent rights can be found in the PATENTS file in the same directory.
    *
    * 
    */

module.exports = StorageController;